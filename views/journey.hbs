    <script src="assets/javascript/components.js"></script>
    <script src="assets/javascript/glfx.js"></script>
    <script src="assets/javascript/journey.js"></script>
    <link rel="stylesheet" href="assets/css/journey.css">
</head>
<body>
    <section id='canvasContainer'>
        <div id='canvasArea'>
            <div id='sky'></div>
            <img id='stars' src="assets/images/sky/starry sky.png">
            <div id='sunrise'></div>
            <div id='sun'>
                <div id="glow"></div>
            </div>
            <div id='darkMoon'></div>
            <div id='ground'></div>
            <div id='path'></div>
            <canvas id='canvas' width="1748" height="1080"></canvas>
        </div>
    </section>
    <section id='sidebar'>
        <div id='narrative'>
        </div>
        <div id='mainMenu'>
            <button class="menuButton" id='menu' onclick="options()">Menu</button>
            <button class="menuButton" id="huntButton" onclick="saveGame(); window.location.href=`/hunt?name=${player.name}&auth=${player.authtoken}`">Hunt</button>
            <button class="menuButton" id='pause' onclick="pause(); $('#pause').hide(); $('#unpause').show()">Pause</button>
            <button class="menuButton" id='unpause' hidden="true" onclick="unpause(); $('#unpause').hide(); $('#pause').show()">Unpause</button>
            <button class="menuButton" id='info' onclick="infoPanel()">Info</button>
            <button class="menuButton" id='Mokemon' onclick="mokemon()">Mokemon™</button>
        </div>
        <div id="msgbox" class="hidden dialogBox">
            <div id="msgbuttons"></div>
        </div>
        <div id='optionsMenu' class='hidden dialogBox'>
            <p style="text-align: center">Options: <button class="backButton" onclick="closeOptions()">⮠</button></p>
            <button class="optionButton" onclick="restDialog()">Rest</button>
            <button class="optionButton" onclick="saveGame(); closeOptions(); msgBox('Game saved.');">Save</button>
            <button class="optionButton" onclick="window.location.href=window.location.href">Reload</button>
        </div>
        <div id='mokemonMenu' class='hidden infoPanel dialogBox'>
            <section id="mokemonInfo">
                <p>Your Mokemon posse:<button class="backButton" onclick="$('#mokemonMenu').hide()">⮠</button></p>
                <div id="mokePosse"></div>
                <div id="mokeStats"></div>
            </section>
        </div>
        <div id="playerInfo" class="hidden infoPanel dialogBox">
            <p>Player Info:<button class="backButton" onclick="$('#playerInfo').hide()">⮠</button></p>
            <p id="foodInfo"></p>
            <p id="moneyInfo"></p>
            <p id="ammoInfo"></p>
    </section>
</body>

<script>
    const targetAspectRatio = 34 / 21
    let targetWidth
    $(document).ready(function() {
        targetWidth = $('#canvas').attr('width')
        console.log('targetWidth: ' + targetWidth)
        adjustAspectRatio()
    })
    function debounce(func, timeout = 100){
        let timer;
        return (...args) => {
            clearTimeout(timer);
            timer = setTimeout(() => { func.apply(this, args); }, timeout);
        };
    }
    function adjustAspectRatio() {
        const outer = document.querySelector('#canvasContainer')
        const inner = document.querySelector('#canvasArea')
        const narrative = document.querySelector('#narrative')
        
        let outerWidth = outer.offsetWidth
        let outerHeight = outer.offsetHeight
        
        // Calculate the maximum size of the inner div
        let innerWidth = outerWidth
        let innerHeight = innerWidth / targetAspectRatio;
        
        if (outerWidth / outerHeight < targetAspectRatio) {
            innerHeight = outerHeight
            innerWidth = outerWidth
            $('#canvas').attr('width', targetWidth * outerWidth / outerHeight / targetAspectRatio)
            // console.log('canvas width: ' + $('#canvas').attr('width'))
        }
        else {
            $('#canvas').attr('width', targetWidth)
        }
        // Adjust height if it exceeds the outer div
        if (innerHeight > outerHeight) {
            innerHeight = outerHeight
            innerWidth = innerHeight * targetAspectRatio
        }
        
        // Center the inner div
        inner.style.width = `${innerWidth}px`
        inner.style.height = `${innerHeight}px`
        // inner.style.top = `${(outerHeight - innerHeight) / 2}px`;
        // inner.style.left = `${(outerWidth - innerWidth) / 2}px`;
        // if (canvas) canvas.draw()
    }

    // Adjust on resize
    window.addEventListener('resize', debounce(adjustAspectRatio, 25))
    // Initial adjustment
    adjustAspectRatio()
</script>